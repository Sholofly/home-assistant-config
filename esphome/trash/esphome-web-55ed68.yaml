esphome:
  name: esphome-web-55ed68
  friendly_name: Escaperoom

esp8266:
  board: nodemcuv2

# Enable logging
logger:
  id: logger_id

api:
  id: component_api
  encryption:
    key: !secret esphome_api_key

ota:


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esphome-Web-55Ed68"
    password: "GIW8Xo9V7krs"

captive_portal:

output:
- platform: gpio
  pin: D5
  id: gpio_d5

light:
  - platform: binary
    name: "Green LED"
    output: gpio_d5
    id: green_led

web_server:
  id: component_web_server

script:
  - id: lightup
    mode: queued
    parameters:
      delay_ms: int
   
    then:
      if:
        condition:
          lambda: 'return delay_ms > 0;'
        then:
          - light.turn_on: green_led
          - delay: !lambda return delay_ms;
          - light.turn_off: green_led
          - delay: 0.5s
        else:
          - delay: 2s
          
binary_sensor:
  id: escaperoom_ready
  name: Escaperoom Ready
  platform: template
  lambda: !lambda |-
    return id(mqtt_client)->is_connected();
    
button:
  - id: escaperoom_restart
    platform: restart
    name: "Escaperoom Restart"

mqtt:
  id: mqtt_client
  broker: 192.168.1.21
  username: esphome
  password: esphome
  on_json_message:
    topic: escaperoom/start
    then:
      - lambda: |-

          std::map<char,std::string> themap;
          themap['a'] = ".-";
          themap['b'] = "-...";
          themap['c'] = "-.-.";
          themap['d'] = "-..";
          themap['e'] = ".";
          themap['f'] = "..-.";
          themap['g'] = "--.";
          themap['h'] = "....";
          themap['i'] = "..";
          themap['j'] = ".---";
          themap['k'] = "-.-";
          themap['l'] = ".-..";
          themap['m'] = "--";
          themap['n'] = "-.";
          themap['o'] = "---";
          themap['p'] = ".--.";
          themap['q'] = "--.-";
          themap['r'] = ".-.";
          themap['s'] = "...";
          themap['t'] = "-.";
          themap['u'] = "..-";
          themap['v'] = "...-";
          themap['w'] = ".--";
          themap['x'] = "-..-";
          themap['y'] = "-.--";
          themap['z'] = "--..";
          themap[' '] = " ";

          if(!x.containsKey("word")){
            return;
          }
          String word = x["word"];
          for(char& c : word) {
            for(char& d : themap[c]){
              if(d == '-'){
                id(lightup)->execute(1500);
              }
              if(d == '.'){
                id(lightup)->execute(500);
              }
            }
            id(lightup)->execute(0);
          }      