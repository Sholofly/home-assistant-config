---
blueprint:
  name: ZHA - IKEA SYMFONISK for lights
  description: |
    Control lights with an IKEA SYMFONISK.

    Pushing the button once, toggles the lights on/off to the last set
    brightness (unless the force brightness is toggled on in the blueprint).

    Rotating left/right will change the brightness.

    The button can be pressed double or triple, these actions can be assigned
    freely. This allows you to assign, e.g., a scene or anything else.

  domain: automation
  input:
    remote:
      name: Remote
      description: IKEA SYMFONISK to use
      selector:
        device:
          integration: zha
          manufacturer: IKEA of Sweden
          model: SYMFONISK Sound Controller
    light:
      name: Light(s)
      description: The light(s) to control
      selector:
        target:
          entity:
            domain: light
    force_brightness:
      name: Force turn on brightness
      description: >
        Force the brightness to the set level below, when the "on" button on
        the remote is pushed and lights turn on.
      default: false
      selector:
        boolean:
    brightness:
      name: Brightness
      description: Brightness of the light(s) when turning on
      default: 50
      selector:
        number:
          min: 0
          max: 100
          mode: slider
          step: 1
          unit_of_measurement: "%"
    double_press:
      name: Double press
      description: Action to run on double press
      default: []
      selector:
        action:
    triple_press:
      name: Triple press
      description: Action to run on triple press
      default: []
      selector:
        action:

mode: single
max_exceeded: silent

variables:
  force_brightness: !input force_brightness

trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input remote

action:
  - variables:
      command: "{{ trigger.event.data.command }}"
      cluster_id: "{{ trigger.event.data.cluster_id }}"
      endpoint_id: "{{ trigger.event.data.endpoint_id }}"
      args: "{{ trigger.event.data.args }}"
  - choose:
      - conditions:
          - "{{ command == 'toggle' }}"
          - "{{ cluster_id == 6 }}"
          - "{{ endpoint_id == 1 }}"
        sequence:
          - choose:
              - conditions: "{{ force_brightness }}"
                sequence:
                  - service: light.toggle
                    target: !input light
                    data:
                      transition: 1
                      brightness_pct: !input brightness
            default:
              - service: light.toggle
                target: !input light
                data:
                  transition: 1
          - delay:
              # Small delay to cancel out rotation on pushing
              milliseconds: 100

      - conditions:
          - "{{ command == 'move' }}"
          - "{{ cluster_id == 8 }}"
          - "{{ endpoint_id == 1 }}"
          - "{{ args == [0, 195] }}"
        sequence:
          - service: light.turn_on
            target: !input light
            data:
              brightness_step_pct: 5

      - conditions:
          - "{{ command == 'move' }}"
          - "{{ cluster_id == 8 }}"
          - "{{ endpoint_id == 1 }}"
          - "{{ args == [1, 195] }}"
        sequence:
          - service: light.turn_on
            target: !input light
            data:
              brightness_step_pct: -5

      - conditions:
          - "{{ command == 'step' }}"
          - "{{ cluster_id == 8 }}"
          - "{{ endpoint_id == 1 }}"
          - "{{ args == [0, 1, 0] }}"
        sequence: !input double_press

      - conditions:
          - "{{ command == 'step' }}"
          - "{{ cluster_id == 8 }}"
          - "{{ endpoint_id == 1 }}"
          - "{{ args == [1, 1, 0] }}"
        sequence: !input triple_press
